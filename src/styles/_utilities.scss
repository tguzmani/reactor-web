@mixin simpleSpace {
  // margin and padding values
  $spacings: (0, 0.25rem, 0.5rem, 1rem, 1.5rem, 2rem) !default;

  // margin and padding shorthand prefixes
  $prefixes: (
    p: padding,
    px: (
      padding-left,
      padding-right,
    ),
    py: (
      padding-top,
      padding-bottom,
    ),
    pt: padding-top,
    pr: padding-right,
    pb: padding-bottom,
    pl: padding-left,
    m: margin,
    mx: (
      margin-left,
      margin-right,
    ),
    my: (
      margin-top,
      margin-bottom,
    ),
    mt: margin-top,
    mr: margin-right,
    mb: margin-bottom,
    ml: margin-left,
  ) !default;

  // Loop generating all spacing styles
  @each $attr-short, $attr-list in $prefixes {
    @each $space in $spacings {
      .#{$attr-short}-#{ index(($spacings), $space)-1 } {
        @each $attr in $attr-list {
          #{$attr}: #{$space} !important;
        }
      }
    }
  }
}

@include simpleSpace();

.btn {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.25s ease-in-out;

  &-big {
    padding: 0.75rem 1.5rem;
    font-size: 1.1rem;
  }

  &-primary {
    // background-color: $primary-color;

    background-image: linear-gradient(
      -30deg,
      #1fa2ff 0%,
      #12d8fa 50%,
      #1fa2ff 100%
    );
    background-size: 200% auto;
    color: $light-color;

    &:hover {
      // background-color: lighten($primary-color, 15%);
      // box-shadow: 0px 0px 1rem 0.5rem lighten($primary-color, 40%);
      background-position: right center; /* change the direction of the change here */
      color: #fff;
      text-decoration: none;
    }
  }
}
